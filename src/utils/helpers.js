const HttpError = require('../models/http-error');

/**
 * Transform array of objects to a smaller array of objects with required fields.
 * @param {Array} errors - array of error objects generated by validationResult fn.
 * @returns {Array} updated array of errors with necessary fields.
 */
const collectErrors = (errors) => {
  return errors.map((error) => {
    return { message: error.msg, field: error.path };
  });
};

/**
 * Convert hours to milliseconds
 * @param {String} hours - string as a number of  hours
 * @returns {Number} milliseconds
 */
const convertHoursToMilliseconds = (hours) => {
  return parseInt(hours) * 60 * 60 * 1000;
};

/**
 * Check image file in request
 * @param {File} file - image as a file
 * @param {Function} next - default next route fn
 * @returns {Error} return error if not file found
 */
const checkImage = (file, next) => {
  if (!file) {
    const error = new HttpError('Provided file is incorrect or missing', 422, {
      field: 'image',
      message: 'Please check the selected file (.jpg, .png, .jpeg)',
    });

    return next(error);
  }
};

/**
 * Check inputs fields in request
 * @param {Object} errors - result from validationResult function
 * @param {Function} next - default next route fn
 * @returns {Error} return error if errors not empty
 */
const checkInputs = (errors, next) => {
  if (!errors.isEmpty()) {
    const error = new HttpError(
      'Invalid inputs! Please check your data and try again',
      422,
      collectErrors(errors.array())
    );

    return next(error);
  }
};

module.exports.collectErrors = collectErrors;
module.exports.convertHoursToMilliseconds = convertHoursToMilliseconds;
module.exports.checkImage = checkImage;
module.exports.checkInputs = checkInputs;
